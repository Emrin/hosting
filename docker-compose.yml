version: "3.8"
services:
  nbold-proxy:
    container_name: nbold-proxy
    image: nginx:1.25.2-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
    - '3000:80'
    depends_on:
    - nbold-web
    - nbold-api
    - nbold-analytics

  nbold-web:
    container_name: nbold-web
    image: nboldhq/nbold-selfhosted
    restart: unless-stopped
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    environment:
      - APP_ROLE=web
    env_file:
      - .env
    depends_on:
      - nbold-postgres-primary
      - nbold-redis
      - nbold-audit

  nbold-api:
    container_name: nbold-api
    image: nboldhq/nbold-selfhosted
    restart: unless-stopped
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    environment:
      - APP_ROLE=api
    env_file:
      - .env
    depends_on:
      - nbold-postgres-primary
      - nbold-redis
      - nbold-audit

  nbold-jobs:
    container_name: nbold-jobs
    image: nboldhq/nbold-selfhosted
    restart: unless-stopped
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    environment:
      - APP_ROLE=jobs
    env_file:
      - .env
    depends_on:
      - nbold-postgres-primary
      - nbold-redis
      - nbold-audit
      - nbold-analytics

  nbold-scheduler:
    container_name: nbold-scheduler
    image: nboldhq/nbold-selfhosted
    restart: unless-stopped
    expose:
      - "3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    environment:
      - APP_ROLE=scheduler
    env_file:
      - .env
    depends_on:
      - nbold-postgres-primary
      - nbold-redis
      - nbold-audit

  nbold-back-office:
    container_name: nbold-back-office
    image: nboldhq/nbold-selfhosted
    restart: unless-stopped
    ports:
      - "3002:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    environment:
      - APP_ROLE=back-office
    env_file:
      - .env
    depends_on:
      - nbold-postgres-primary
      - nbold-redis
      - nbold-audit

  nbold-redis:
    container_name: nbold-redis
    image: redis:7.0.12
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    volumes:
      - nbold-redis-data:/data
    expose:
      - "6379"

  nbold-postgres-primary:
    container_name: nbold-postgres-primary
    image: postgres:15.3
    volumes:
      - nbold-postgres-primary-data:/var/lib/postgresql/data
    restart: unless-stopped
    expose:
      - "5432"
    healthcheck:
      test: CMD pg_isready --quiet --dbname ${DB_DATABASE_NAME} --username ${DB_USER}
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE_NAME}

  nbold-primary-db-api:
    container_name: nbold-primary-db-api
    image: nboldhq/postgrest:development
    expose:
      - "9095"
    restart: unless-stopped
    # https://postgrest.org/en/stable/references/admin.html#health-check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9096/ready"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      PGRST_ADMIN_SERVER_PORT: 9096
      PGRST_SERVER_PORT: 9095
      PGRST_DB_URI: postgres://${DB_USER}:${DB_PASSWORD}@nbold-postgres-primary:5432/${DB_DATABASE_NAME}
      PGRST_DB_SCHEMAS: public
      PGRST_JWT_SECRET: ${DB_API_JWT_SECRET}
    depends_on:
      - nbold-postgres-primary

  nbold-audit:
    container_name: nbold-audit
    image: nboldhq/jitsu:development
    restart: unless-stopped
    expose:
      - "8010"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010"]
      interval: 10s
      timeout: 3s
      retries: 10
    environment:
      AUDIT_SERVICE_SERVER_NAME: nbold-audit:8010
      AUDIT_SERVICE_PORT: 8010
      AUDIT_SERVICE_AUTH_CLIENT_TOKEN: ${AUDIT_SERVICE_AUTH_CLIENT_TOKEN}
      AUDIT_SERVICE_AUTH_SERVER_TOKEN: ${AUDIT_SERVICE_AUTH_SERVER_TOKEN}
      AUDIT_SERVICE_AUTH_ADMIN_TOKEN: ${AUDIT_SERVICE_AUTH_ADMIN_TOKEN}
      AUDIT_SERVICE_AUTHORIZED_ORIGIN: ${AUDIT_SERVICE_AUTHORIZED_ORIGIN}
      AUDIT_SERVICE_DB_CLIENT: postgres
      AUDIT_SERVICE_DB_HOST: nbold-postgres-primary
      AUDIT_SERVICE_DB_SSL_MODE: disable
      AUDIT_SERVICE_DB_PORT: 5432
      AUDIT_SERVICE_DB_NAME: ${DB_DATABASE_NAME}
      AUDIT_SERVICE_DB_USER: ${DB_USER}
      AUDIT_SERVICE_DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - nbold-postgres-primary

  nbold-postgres-analytics:
    container_name: nbold-postgres-analytics
    image: postgres:15.3
    volumes:
      - nbold-postgres-analytics-data:/var/lib/postgresql/data
    healthcheck:
      test: CMD pg_isready -q -d nbold_analytics_db -U nbold_analytics_user
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    restart: unless-stopped
    environment:
      POSTGRES_USER: nbold_analytics_user
      POSTGRES_PASSWORD: nbold_analytics_password
      POSTGRES_DB: nbold_analytics_db
    expose:
      - "5432"

  nbold-analytics:
    container_name: nbold-analytics
    image: nboldhq/metabase:development
    restart: unless-stopped
    # https://www.metabase.com/docs/latest/installation-and-operation/running-metabase-on-azure#how-to-enable-health-checks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 10s
      timeout: 3s
      retries: 10
    environment:
      MB_SITE_URL: http://nbold-analytics:5001
      MB_JETTY_PORT: 5001
      MB_ENCRYPTION_SECRET_KEY: ${ANALYTICS_SERVICE_ENCRYPTION_SECRET}
      MB_SETUP_TOKEN: ${ANALYTICS_SERVICE_SETUP_TOKEN}
      MB_EMBEDDING_SECRET_KEY: ${ANALYTICS_SERVICE_EMBEDDING_SECRET_KEY}
      MB_DB_TYPE: postgres
      MB_DB_HOST: nbold-postgres-analytics
      MB_DB_PORT: 5432
      MB_DB_DBNAME: nbold_analytics_db
      MB_DB_USER: nbold_analytics_user
      MB_DB_PASS: nbold_analytics_password
    expose:
      - "5001"
    depends_on:
      - nbold-postgres-analytics

volumes:
  nbold-redis-data:
  nbold-postgres-primary-data:
  nbold-postgres-analytics-data:
